play_spotify_rock:
  sequence:
  - service: media_player.select_source
    data_template:
      entity_id: media_player.spotify
      source: "{{ variables.media_player }}"
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.spotify
      shuffle: 'true'
  - service: media_player.play_media
    data_template:
      entity_id: media_player.spotify
      media_content_id: spotify:user:spotify:playlist:6T2oElw93xmSRRpyBx1EcA
      media_content_type: playlist
play_spotify_susse:
  sequence:
  - service: media_player.select_source
    data_template:
      entity_id: media_player.spotify
      source: "{{ variables.media_player }}"
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.spotify
      shuffle: 'true'
  - service: media_player.play_media
    data_template:
      entity_id: media_player.spotify
      media_content_id: spotify:user:12175389811:playlist:7tZCnbcEtYn6Mp17EBAKzP
      media_content_type: playlist
play_spotify_isabelle:
  sequence:
  - service: media_player.select_source
    data_template:
      entity_id: media_player.spotify
      source: "{{ variables.media_player }}"
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.spotify
      shuffle: 'true'
  - service: media_player.play_media
    data_template:
      entity_id: media_player.spotify
      media_content_id: spotify:user:12175389811:playlist:5AY8U80s1JcmuCTk16LbCe
      media_content_type: playlist
  
## Volume TV Quarto

# Executa scripts para sincronizar volume para 10
reset_vol_quarto:
  alias: Reset Volume da Quarto
  sequence:
  - service: input_number.set_value
    entity_id: input_number.vol_tv_quarto
    data:
      value: 30
  - service: script.reduz_vol_quarto
    data:
      vol: 0
  - delay: "00:00:20"
  - service: script.aumenta_vol_quarto
    data:
      vol: 10

# Reduz volume da TV da Quarto
reduz_vol_quarto:
  alias: Reduz Volume do Quarto
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_baixo_tv_q
  - wait_template: "{{ is_state('script.reduz_vol_quarto_pause', 'off') }}"
  - service_template: >
       {% if states.input_number.vol_tv_quarto.state|int > vol|int %}
         script.turn_on
       {% endif %}
    entity_id: script.reduz_vol_quarto_pause
    data_template:
      variables:
        vol: "{{ vol }}"
reduz_vol_quarto_pause:
  alias: Reduz Volume do Quarto Pause
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_baixo_tv_q
  - wait_template: "{{ is_state('script.reduz_vol_quarto', 'off') }}"
  - delay:
      milliseconds: 100
  - service_template: >
       {% if states.input_number.vol_tv_quarto.state|int > vol|int %}
         script.turn_on
       {% endif %}
    entity_id: script.reduz_vol_quarto
    data_template:
      variables:
        vol: "{{ vol }}"
aumenta_vol_quarto:
  alias: Aumenta Volume Quarto
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_cima_tv_q
  - wait_template: "{{ is_state('script.aumenta_vol_quarto_pause', 'off') }}"
  - service_template: >
       {% if states.input_number.vol_tv_quarto.state|int < (vol | int) %}
         script.turn_on
       {% endif %}
    entity_id: script.aumenta_vol_quarto_pause
    data_template:
      variables:
        vol: "{{ vol }}"
aumenta_vol_quarto_pause:
  alias: Aumenta Volume do Quarto Pause
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_cima_tv_q
  - wait_template: "{{ is_state('script.aumenta_vol_quarto', 'off') }}"
  - delay:
      milliseconds: 100
  - service_template: >
       {% if states.input_number.vol_tv_quarto.state|int < vol|int %}
         script.turn_on
       {% endif %}
    entity_id: script.aumenta_vol_quarto
    data_template:
      variables:
        vol: "{{ vol }}"

set_vol_quarto:
  alias: Set Volume do Quarto
  sequence:
  - service_template: >
       {% if states.input_number.vol_tv_quarto.state|int != vol|int %}
         script.turn_on
       {% endif %}
    data_template: 
      entity_id: >
       {% if states.input_number.vol_tv_quarto.state|int > vol|int %}
         script.reduz_vol_quarto
       {% else %}
         script.aumenta_vol_quarto
       {% endif%}
      variables:
        vol: "{{ vol }}"

## Controle Sala

liga_tv_net_sala:
  alias: Liga TV Net Sala
  sequence:
  - data:
      entity_id: switch.power_net_s
    service: switch.turn_on
  - data:
      entity_id: switch.power_tv_s
    service: switch.turn_on
tv_sala_discovery:
  alias: TV Sala Discovery
  sequence:
  - data:
      entity_id: switch.source_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.sair_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.seis_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.zero_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.zero_net_s
    service: switch.turn_on
tv_sala_globo:
  alias: TV Sala Globo
  sequence:
  - data:
      entity_id: switch.source_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.sair_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.cinco_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.um_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.dois_net_s
    service: switch.turn_on
tv_sala_sbt:
  alias: TV Sala SBT
  sequence:
  - data:
      entity_id: switch.source_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.sair_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.cinco_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.zero_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.quatro_net_s
    service: switch.turn_on
tv_sala_record:
  alias: TV Sala Record
  sequence:
  - data:
      entity_id: switch.source_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.sair_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.cinco_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.zero_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.sete_net_s
    service: switch.turn_on
tv_sala_band:
  alias: TV Sala Band
  sequence:
  - data:
      entity_id: switch.source_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.sair_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.cinco_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.zero_net_s
    service: switch.turn_on
  - delay:
      milliseconds: 200
  - data:
      entity_id: switch.dois_net_s
    service: switch.turn_on
liga_tv_sala_discovery:
  alias: Liga TV Sala Discovery
  sequence:
  - data:
      entity_id: script.liga_tv_net_sala
    service: script.turn_on
  - delay:
      seconds: 80
  - data:
      entity_id: script.tv_sala_discovery
    service: script.turn_on
liga_tv_sala_globo:
  alias: Liga TV Sala Globo
  sequence:
  - data:
      entity_id: script.liga_tv_net_sala
    service: script.turn_on
  - delay:
      seconds: 80
  - data:
      entity_id: script.tv_sala_globo
    service: script.turn_on
liga_tv_sala_sbt:
  alias: Liga TV Sala SBT
  sequence:
  - data:
      entity_id: script.liga_tv_net_sala
    service: script.turn_on
  - delay:
      seconds: 80
  - data:
      entity_id: script.tv_sala_sbt
    service: script.turn_on
liga_tv_sala_record:
  alias: Liga TV Sala Record
  sequence:
  - data:
      entity_id: script.liga_tv_net_sala
    service: script.turn_on
  - delay:
      seconds: 80
  - data:
      entity_id: script.tv_sala_record
    service: script.turn_on
liga_chromecast_sala:
  alias: Liga Chromecast Sala
  sequence:
  - data:
      entity_id: script.liga_tv_net_sala
    service: script.turn_on
  - delay:
      seconds: 10
  - data:
      entity_id: switch.source_chromecast_s
    service: switch.turn_on

## Volume TV Sala

# Executa scripts para sincronizar volume para 10
reset_vol_sala:
  alias: Reset Volume da Sala
  sequence:
  - service: input_number.set_value
    entity_id: input_number.vol_tv_sala
    data:
      value: 30
  - service: script.reduz_vol_sala
    data:
      vol: 0
  - delay: "00:00:20"
  - service: script.aumenta_vol_sala
    data:
      vol: 10

# Reduz volume da TV da Sala
reduz_vol_sala:
  alias: Reduz Volume do Sala
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_baixo_tv_s
  - wait_template: "{{ is_state('script.reduz_vol_sala_pause', 'off') }}"
  - service_template: >
       {% if states.input_number.vol_tv_sala.state|int > vol|int %}
         script.turn_on
       {% endif %}
    entity_id: script.reduz_vol_sala_pause
    data_template:
      variables:
        vol: "{{ vol }}"
reduz_vol_sala_pause:
  alias: Reduz Volume do Sala Pause
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_baixo_tv_s
  - wait_template: "{{ is_state('script.reduz_vol_sala', 'off') }}"
  - delay:
      milliseconds: 100
  - service_template: >
       {% if states.input_number.vol_tv_sala.state|int > vol|int %}
         script.turn_on
       {% endif %}
    entity_id: script.reduz_vol_sala
    data_template:
      variables:
        vol: "{{ vol }}"
aumenta_vol_sala:
  alias: Aumenta Volume Sala
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_cima_tv_s
  - wait_template: "{{ is_state('script.aumenta_vol_sala_pause', 'off') }}"
  - service_template: >
       {% if states.input_number.vol_tv_sala.state|int < (vol | int) %}
         script.turn_on
       {% endif %}
    entity_id: script.aumenta_vol_sala_pause
    data_template:
      variables:
        vol: "{{ vol }}"
aumenta_vol_sala_pause:
  alias: Aumenta Volume do Sala Pause
  sequence:
  - service: switch.toggle
    entity_id: switch.vol_cima_tv_s
  - wait_template: "{{ is_state('script.aumenta_vol_sala', 'off') }}"
  - delay:
      milliseconds: 100
  - service_template: >
       {% if states.input_number.vol_tv_sala.state|int < vol|int %}
         script.turn_on
       {% endif %}
    entity_id: script.aumenta_vol_sala
    data_template:
      variables:
        vol: "{{ vol }}"

set_vol_sala:
  alias: Set Volume do Sala
  sequence:
  - service: notify.telegram_bot
    data:
      message: "{{ vol }}"
  - service_template: >
       {% if states.input_number.vol_tv_sala.state|int != vol|int %}
         script.turn_on
       {% endif %}
    data_template: 
      entity_id: >
       {% if states.input_number.vol_tv_sala.state|int > vol|int %}
         script.reduz_vol_sala
       {% else %}
         script.aumenta_vol_sala
       {% endif%}
      variables:
        vol: "{{ vol }}"

## Atualização Texto e Voz Briefing

# Atualizar todos textos e voz
atualiza_texto_voz:
  alias: Atualiza Texto e Voz
  sequence:
  - service: script.saudacao_texto
  - service: script.saudacao_voz
  - service: script.clima_texto
  - service: script.clima_voz
  - service: script.mercado_financeiro_texto
  - service: script.mercado_financeiro_voz
  - service: script.proximo_compromisso_texto
  - service: script.proximo_compromisso_voz
# Saudacao
saudacao_texto:
  alias: Saudacao Texto
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.saudacao_texto
      value: >
       {% if now().hour > 18 %}
       Boa noite Robson,
       {% elif now().hour > 12 %}
       Boa tarde Robson,
       {% else %}
       Bom dia Robson,
       {% endif %}
       {{{"Sunday": "domingo","Monday": "segunda-feira", "Tuesday": "terça-feira", "Wednesday": "quarta-feira", "Thursday": "quinta-feira", "Friday": "sexta-feira", "Saturday": "sábado"}[now().strftime('%A')] | default(now().strftime('%A')) }},
       {{ now().strftime('%d/%m') }}
saudacao_voz:
  alias: Saudacao Voz
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.saudacao_voz
      value: >
         {% if now().hour > 18 %}
         Boa noite Robson,
         {% elif now().hour > 12 %}
         Boa tarde Robson,
         {% else %}
         Bom dia Robson,
         {% endif %}
         {{ {"Sunday": "domingo","Monday": "segunda-feira", "Tuesday": "terça-feira", "Wednesday": "quarta-feira", "Thursday": "quinta-feira", "Friday": "sexta-feira", "Saturday": "sábado"}[now().strftime('%A')] | default(now().strftime('%A')) }}
          {{ now().strftime('%d/%m') }}
         as {{ (now().strftime('%H')) | int }} horas
         {% if (now().strftime('%M')) | int != 0 %}
         e {{ (now().strftime('%M')) | int }} minutos
         {% endif %}.

 # Clima
# Clima
clima_texto:
  alias: Clima Texto
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.clima_texto
      value: >
       *Temperatura Atual:*{{- '\n' -}}
       *- *{{ states.sensor.dark_sky_temperature.state|replace('.', ',') }} {{ states.sensor.dark_sky_temperature.attributes.unit_of_measurement }} {{ states.sensor.dark_sky_summary_pt.state }}{{- '\n' -}}
       *Previsão de tempo de hoje:*{{- '\n' -}}
       *- *{{ states.sensor.forecast_0.state }}{{- '\n' -}}
       *Previsão de tempo amanhã:*{{- '\n' -}}
       *- *{{ states.sensor.forecast_1.state }}
clima_voz:
  alias: Clima Voz
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.clima_voz
      value: >
       Temperatura atual de {{ (states.sensor.dark_sky_temperature.state|round(0))}}°,
       {{ states.sensor.dark_sky_summary_pt.state }},
       {% if now().hour > 18 %}
       amanhã máxima de {{ (states.sensor.dark_sky_daily_high_temperature_1.state|round(0))}}°,
       mínima de {{ (states.sensor.dark_sky_daily_low_temperature_1.state|round(0))}}°,
       humidade de {{ (states.sensor.dark_sky_humidity_1.state|round(0)) }}{{ states.sensor.dark_sky_humidity_1.attributes.unit_of_measurement }},
       e probabilidade de chuva de {{ (states.sensor.dark_sky_precip_probability_1.state|round(0)) }}{{ states.sensor.dark_sky_precip_probability_1.attributes.unit_of_measurement }},
       {% else %}
       máxima de {{ (states.sensor.dark_sky_daily_high_temperature.state|round(0))}}°,
       mínima de {{ (states.sensor.dark_sky_daily_low_temperature.state|round(0))}}°,
       humidade de {{ (states.sensor.dark_sky_humidity.state|round(0)) }}{{ states.sensor.dark_sky_humidity.attributes.unit_of_measurement }},
       e probabilidade de chuva de {{ (states.sensor.dark_sky_precip_probability.state|round(0)) }}{{ states.sensor.dark_sky_precip_probability.attributes.unit_of_measurement }},
       {% endif %}
       para os próximos dias {{ states.sensor.dark_sky_daily_summary_pt.state }}
# Mercado Financeiro    
mercado_financeiro_texto:
  alias: Mercado Financeiro Texto
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.mercado_financeiro_texto
      value: >
       *Dolar:*{{- '\n' -}}
       *- Atual:* {{ (states.sensor.exchange_rate_sensor.state|round(2))|replace('.', ',') }}{{- '\n' -}}
       *Bitcoin:*{{- '\n' -}}
       *- D-1:* {{ ((states.input_number.valor_bitcoin_meianoite.state) | round(2))|replace('.', ',') }}({{ (((((states.input_number.valor_bitcoin_meianoite.state | float) / (states.input_number.valor_bitcoin_meianoite_ontem.state | float)) -1) * 100) | round(2))|replace('.', ',') }}%){{- '\n' -}}
       *- Atual:* {{((states.sensor.btc.state | float) | round(2))|replace('.', ',') }}({{ (((((states.sensor.btc.state | float) / (states.input_number.valor_bitcoin_meianoite.state | float)) -1) * 100) | round(2))|replace('.', ',') }}%){{- '\n' -}}
       *- Valor Carteira:* USD {{ (((states.sensor.btc.state | float) * 0.028924) | round(2))|replace('.', ',') }} | BRL {{ (((states.sensor.btc.state | float) * 0.028924 * (states.sensor.exchange_rate_sensor.state | float)) | round(2))|replace('.', ',') }}
mercado_financeiro_voz:
  alias: Mercado Financeiro Voz
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.mercado_financeiro_voz
      value: >
       A cotação do dolar está em {{ (states.sensor.exchange_rate_sensor.state|round(2))|replace('.', ' e ') }}
       , e o bitcoin em {{ (states.sensor.btc.state|round(0)) }}
       , com uma variação de {{ (((((states.sensor.btc.state | float) / (states.input_number.valor_bitcoin_meianoite.state | float)) -1) * 100) | round(2))|replace('.', ' virgula ') }} %.
# Proximo Compromisso
proximo_compromisso_texto:
  alias: Proximo Compromisso Texto
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.proximo_compromisso_texto
      value: >
       *Próximo compromisso:*{{- '\n' -}}
       *- Título:* {{ states.calendar.robson.attributes.message }} {{- '\n' -}}
       *- Horário:* {{ as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d-%m-%Y %H:%M') }}
       até{% if as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d') == as_timestamp(states.calendar.robson.attributes.end_time) | timestamp_custom('%d') %}
       {{ as_timestamp(states.calendar.robson.attributes.end_time) | timestamp_custom('%H:%M') }}
       {% else %}
       {{ as_timestamp(states.calendar.robson.attributes.end_time) | timestamp_custom('%d-%m-%Y %H:%M') }}
       {% endif %}{{- '\n' -}}
       *- Local:*
       {% if states.calendar.robson.attributes.location %}
       {{ states.calendar.robson.attributes.location.split(',')[0] }}
       {% else %}
       Sem Endereço
       {% endif %}
       {{- '\n' -}}
       *- Tempo até destino:* {{ states.sensor.para_compromisso.attributes.duration }}
proximo_compromisso_voz:
  alias: Proximo Compromisso Voz
  sequence:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.proximo_compromisso_voz
      value: >
       Seu próximo compromisso é {{ states.calendar.robson.attributes.message }}
       {% if ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d')) | int == now().day) and
       ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%m')) | int == now().month) %}
       Hoje
       {% elif ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d')) | int == (now().day + 1)) and
       ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%m')) | int == (now().month)) %}
       Amanhã
       {% else %}
       {{ as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d-%m-%Y') }}
       {% endif %}
       as {{ (as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%H')) | int }} horas
       {% if (as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%M')) | int != 0 %}
       e {{ (as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%M')) | int }} minutos
       {% endif %}
       {% if states.calendar.robson.attributes.location %}
       no {{ states.calendar.robson.attributes.location.split(',')[0] }} 
       {% endif %} 
       com tempo previsto de chegada de {{ states.sensor.para_compromisso.attributes.duration |replace('mins', 'minutos') }}.

## Envio de Briefing Texto Telegram

# Envia Telegram Texto Briefing
envia_texto:
  alias: Envia Texto
  sequence:
  - condition: state
    entity_id: input_boolean.enviar_texto
    state: 'on'
  - service: script.envia_saudacao_texto
  - service: script.envia_clima_texto
  - service: script.envia_financeiro_texto
  - service: script.envia_compromisso_texto
# Envia Telegram Texto Saudacao
envia_saudacao_texto:
  alias: Envia Saudacao Texto
  sequence:
  - condition: state
    entity_id: input_boolean.enviar_saudacao
    state: 'on'
  - service: notify.telegram_bot
    data_template:
      message: >
       {{ states.input_text.saudacao_texto.state }}
# Envia Telegram Texto Clima
envia_clima_texto:
  alias: Envia Clima Texto
  sequence:
  - condition: state
    entity_id: input_boolean.enviar_clima
    state: 'on'
  - service: notify.telegram_bot
    data_template:
      message: >
       {{ states.input_text.clima_texto.state }}
# Envia Telegram Texto Financeiro
envia_financeiro_texto:
  alias: Envia Financeiro Texto
  sequence:
  - condition: state
    entity_id: input_boolean.enviar_mercado_financeiro
    state: 'on'
  - service: notify.telegram_bot
    data_template:
      message: >
       {{ states.input_text.mercado_financeiro_texto.state }}
# Envia Telegram Texto Compromisso
envia_compromisso_texto:
  alias: Envia Compromisso Texto
  sequence:
  - condition: state
    entity_id: input_boolean.enviar_proximo_compromisso
    state: 'on'
  - service: notify.telegram_bot
    data_template:
      message: >
       {{ states.input_text.proximo_compromisso_texto.state }}
       
## Envio de Briefing Voz Telegram

# Envia Telegram Voz Briefing
envia_voz:
  alias: Envia voz
  sequence:
  - condition: state
    entity_id: input_boolean.enviar_voz
    state: 'on'
  - service: telegram_bot.send_video
    data:
      file: /config/tts/FlashBriefing.mp3

# Verificar versão do sonoff
check_sonoffs_version:
  alias: Verifica versão do Sonoff
  sequence:
  - service: mqtt.publish
    data_template:
      topic: "cmnd/sonoffs/status"
      payload: 2

# Atualiza versão do sonoff
update_sonoffs:
  alias: Atualiza versão Sonoff
  sequence:
  - service: mqtt.publish
    data_template:
       topic: "cmnd/sonoffs/upgrade"
       payload: 1

# Mensagem na TV
mensagem_tv:
  alias: Mensagem na TV
  sequence:
  - service: tts.google_say
    data_template: 
      entity_id: >
       {% for device in states if (device.attributes.friendly_name == states.input_select.media_player.state and device.domain == 'media_player') -%}
         {{ device.entity_id }}
       {%- endfor %}
      message: >
       {% for device in states if (device.attributes.friendly_name == states.input_select.mensagem_voz_tv.state and device.domain == 'input_text') -%}
         {{ device.state }}
       {%- endfor %}
       .
      language: pt
      
# Video de Ninar
video_ninar:
  alias: Video Ninar
  sequence:
  - condition: state
    entity_id: input_select.mensagem_voz_tv
    state: 'Boa noite Isabelle'
  - service: media_player.play_media
    data_template: 
      entity_id:  >
       {% for device in states if (device.attributes.friendly_name == states.input_select.media_player.state and device.domain == 'media_player') -%}
         {{ device.entity_id }}
       {%- endfor %}
      media_content_id: 'https://fris.duckdns.org:8123/local/Ninar.mp4'
      media_content_type: 'VIDEO'
  - delay:
      minutes: 1
  - service: media_player.volume_down
    data_template:
      entity_id: >
       {% for device in states if (device.attributes.friendly_name == states.input_select.media_player.state and device.domain == 'media_player') -%}
         {{ device.entity_id }}
       {%- endfor %}
  - service: media_player.volume_down
    data_template:
      entity_id: >
       {% for device in states if (device.attributes.friendly_name == states.input_select.media_player.state and device.domain == 'media_player') -%}
         {{ device.entity_id }}
       {%- endfor %}
  - delay:
      minutes: 1
  - service: media_player.volume_down
    data_template:
      entity_id: >
       {% for device in states if (device.attributes.friendly_name == states.input_select.media_player.state and device.domain == 'media_player') -%}
         {{ device.entity_id }}
       {%- endfor %}
  - service: media_player.volume_down
    data_template:
      entity_id: >
       {% for device in states if (device.attributes.friendly_name == states.input_select.media_player.state and device.domain == 'media_player') -%}
         {{ device.entity_id }}
       {%- endfor %}

select_source_sala:
  alias: Select Source Sala
  sequence:
  - service: switch.toggle
    data_template:
      entity_id: >
        {% if source == 'Net'%}
         switch.source_net_s
        {% elif source == 'Chromecast'%}
         switch.source_chromecast_s
        {% elif source == 'DVD'%}
         switch.source_dvd_s
        {% endif %}
        
select_channel_sala:
  alias: Select Source Sala
  sequence:
  - service: script.toggle
    data_template:
      entity_id: >
        {% if channel == 'Globo'%}
         script.tv_sala_globo
        {% elif channel == 'SBT'%}
         script.tv_sala_sbt
        {% elif channel == 'Band'%}
         script.tv_sala_band
        {% elif channel == 'Discovery Kids'%}
         script.tv_sala_discovery
        {% elif channel == 'Record'%}
         script.tv_sala_record
        {% endif %}
        