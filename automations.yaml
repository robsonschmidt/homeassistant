- alias: CPU Alta
  trigger:
  - platform: template
    value_template: >
     {{ states.sensor.cpu_temperature.state >= states.input_number.temp_cpu_alta.state
     and  states.sensor.cpu_temperature.state < states.input_number.temp_cpu_muito_alta.state}}
  action:
  - service: notify.telegram_admin
    data_template:
      message: >
       *Monitoramento Raspberry*{{- '\n' -}}Temperatura do _CPU_ está _alta_ em {{ states.sensor.cpu_temperature.state }} ºC
- alias: CPU Muito Alta
  trigger:
  - platform: template
    value_template: >
     {{ states.sensor.cpu_temperature.state >= states.input_number.temp_cpu_muito_alta.state}}
  action:
  - service: notify.telegram_admin
    data_template:
      message: >
        *Monitoramento Raspberry*{{- '\n' -}}Temperatura do _CPU_ está _muito alta_ em {{ states.sensor.cpu_temperature.state }} ºC
- alias: Portao aberto/fechado
  trigger:
  - entity_id: binary_sensor.portao
    platform: state
  action:
  - service: python_script.set_state
    data_template:
      entity: switch.portao
      state: '{{ trigger.to_state.state }}'
  - service: notify.telegram_bot
    data_template:
      message: >
       *Portão da Casa*{{- '\n' -}}
       {% if trigger.to_state.state == 'on'  %}
       O _portão_ está _abrindo_.
       {% else %}
       O _portão_ está _fechado_.
       {% endif%}
- alias: Portao aberto muito tempo
  trigger:
  - entity_id: binary_sensor.portao
    platform: state
    to: 'on'
    for:
      minutes: 10
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Portão da Casa*{{- '\n' -}}
       _Portão_ aberto por _muito tempo_.
- alias: Portao aberto sem ninguem em casa
  condition:
    - condition: state
      entity_id: binary_sensor.alguem_em_casa
      state: 'off'
  trigger:
  - entity_id: binary_sensor.portao
    platform: state
    to: 'on'
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Portão da Casa*{{- '\n' -}}
       _Portão_ foi aberto sem _ninguém em casa_.
- alias: Broadlink Always OFF
  trigger:
  - entity_id: switch.zero_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.um_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.dois_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.tres_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.quatro_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.cinco_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.seis_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.sete_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.oito_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.nove_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.baixo_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.baixo_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.ch_baixo_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.ch_cima_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.cima_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.cima_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.direita_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.direita_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.esquerda_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.esquerda_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.mute_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.mute_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.ok_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.ok_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_chromecast_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_dvd_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_dvd_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_cima_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_baixo_tv_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_cima_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_baixo_tv_q
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.sair_net_s
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.portao
    from: 'off'
    platform: state
    to: 'on'
  action:
  - alias: Broadlink Always OFF
    data_template:
      entity: '{{ trigger.entity_id }}'
      state: 'off'
    service: python_script.set_state
- alias: FRIS Start
  action:
  - service: notify.telegram_admin
    data_template:
      message: >
       *Home Assistant*{{- '\n' -}}
       Serviço _iniciado_.
  - service: script.check_sonoffs_version
  trigger:
  - event: start
    platform: homeassistant
- alias: FRIS Stop
  action:
  - service: notify.telegram_admin
    data_template:
      message: >
       *Home Assistant*{{- '\n' -}}
       Serviço _parado_.
  trigger:
  - event: shutdown
    platform: homeassistant
- alias: Atualiza Nomes Previsão
  id: update_friendly_names
  trigger:
  - at: 0:05:00
    platform: time
  - entity_id: sensor.forecast_1
    platform: state
  - entity_id: sensor.forecast_2
    platform: state
  - entity_id: sensor.forecast_3
    platform: state
  - entity_id: sensor.forecast_4
    platform: state
  - entity_id: sensor.forecast_5
    platform: state
  - entity_id: sensor.forecast_6
    platform: state
  - entity_id: sensor.forecast_7
    platform: state
  action:
  - data_template:
      entityid: '{{trigger.entity_id}}'
    service: python_script.dark_sky_friendly_names
- alias: Backup diário
  trigger:
  - platform: template
    value_template: '{{ states.sensor.time.state == (states.input_datetime.hora_backup.attributes.timestamp
      | int | timestamp_custom(''%H:%M'', false)) }}'
  action:
  - service: rest_command.delete_backup_dropbox
  - service: hassio.snapshot_full
    data_template:
      name: FRIS {{ now().strftime('%Y-%m-%d') }}
  - service: notify.telegram_admin
    data_template:
      message: >
       *Backup do servidor*{{- '\n' -}}
       Criando _Snapshot_ "FRIS {{ now().strftime('%Y-%m-%d') }}"
  - delay: 00:00:30
  - service: rest_command.cria_pasta_backup_dropbox
  - delay: 02:00:00
  - service: hassio.addon_stdin
    data:
      addon: 7be23ff5_dropbox_sync
      input:
        command: upload
  - service: notify.telegram_admin
    data_template:
      message: >
       *Backup do servidor*{{- '\n' -}}
       Iniciando upload do _Snapshot_ para o _Dropbox_.
- alias: Novo backup
  condition:
  - condition: template
    value_template: '{{ ((trigger.to_state.state|float/1024/1024)| int) != ((trigger.from_state.state|float/1024/1024)|int) }}'
  trigger: 
  - platform: state
    entity_id: sensor.dropbox_espaco_usado
  action:
  - service: notify.telegram_admin
    data_template:
      message: >
       *Backup do servidor*{{- '\n' -}}
       _Espaço em uso_ no _Dropbox_ de {%if trigger.from_state.state != 'unavaiable'%}{{ (trigger.from_state.state|float/1024/1024)|int}}Mb{%endif%}
       para {%if trigger.to_state.state != 'unavaiable'%}{{ (trigger.to_state.state|float/1024/1024)| int}}Mb{%endif%}.
- alias: Velocidade Internet Baixa
  trigger:
  - below: '30'
    entity_id: sensor.speedtest_download
    platform: numeric_state
  action:
  - service: notify.telegram_admin
    data_template:
      message: >
       *Monitoramento da Internet*{{- '\n' -}}
       _Velocidade Baixa_ - Download {{ states('sensor.speedtest_download')}} Mbit/s

- alias: Vanda chegou e saiu
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
    - condition: template
      value_template: >
       {{ trigger.from_state.state not in ('not_home','home_arriving','home_arriving2') or trigger.to_state.state not in ('not_home','home_arriving','home_arriving2') }}
  trigger:
  - platform: state
    entity_id: device_tracker.androidedd111010c0c32e5lan
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Controle de Presença*{{- '\n' -}}
       _Vanda_{%if trigger.from_state.state not in ('not_home','home_arriving','home_arriving2') %} saiu de _{{trigger.from_state.state|replace("home","casa")}}_{%endif%}{%if trigger.from_state.state not in ('not_home','home_arriving','home_arriving2') and trigger.to_state.state not in ('not_home','home_arriving','home_arriving2')%} e{%endif%}{%if trigger.to_state.state not in ('not_home','home_arriving','home_arriving2')%} chegou em _{{trigger.to_state.state|replace("home","casa")}}_{%endif%}.
- alias: Vanda chegou, desligar alarme
  condition:
  - condition: time
    after: '06:00:00'
    before: '12:00:00'
    weekday:
    - mon
  trigger:
  - platform: state
    entity_id: device_tracker.androidedd111010c0c32e5lan
    from: 'not_home' 
    to: 'home'
  action:
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.ha_alarm
  - service: notify.telegram_bot
    data_template:
      message: >
       *Segurança Residencial*{{- '\n' -}}
       _Vanda_ chegou, alarme desligado.
- alias: Vanda saiu, ligar alarme
  trigger:
  - platform: state
    entity_id: device_tracker.androidedd111010c0c32e5lan
    from: 'home'
    to: 'not_home'
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.ha_alarm
  - service: notify.telegram_bot
    data_template:
      message: >
       *Segurança Residencial*{{- '\n' -}}
       _Vanda_ saiu de casa, deseja ligar o alarme?
      inline_keyboard:
      - Alarme:/arma_alarme
      - Desliga tudo:/desligar_tudo

- alias: Robson chegou em casa
  trigger:
  - platform: state
    entity_id: sensor.robson_tracker
    from: not_home
    to: home_arriving
  - platform: state
    entity_id: sensor.robson_tracker
    from: not_home
    to: home_arriving2
  - platform: state
    entity_id: sensor.robson_tracker
    from: not_home
    to: home
  action:
  - service: notify.telegram_bot
    data:
      message: 'Olá *Robson*, bem vindo a sua casa. Deseja executar uma das ações
        favoritas:'
      data:
        inline_keyboard:
        - Portão:/portao
        - Desarmar Alarme:/desarma_alarme
        - Liga TV SBT:/ligasbtsala, Canal SBT:/canalsbtsala
        - Liga TV Record:/ligarecordsala, Canal Record:/canalrecordsala
        - Liga TV Globo:/ligaglobosala, Canal Globo:/canalglobosala
        - Liga TV Discovery:/ligadiscoverysala, Canal Discovery:/canaldiscoverysala
- alias: Robson chegou e saiu
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
    - condition: template
      value_template: >
       {{ trigger.from_state.state not in ('not_home','home_arriving','home_arriving2') or trigger.to_state.state not in ('not_home','home_arriving','home_arriving2') }}
  trigger:
  - platform: state
    entity_id: sensor.robson_tracker
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Controle de Presença*{{- '\n' -}}
       _Robson_{%if trigger.from_state.state not in ('not_home','home_arriving','home_arriving2') %} saiu de _{{trigger.from_state.state|replace("home","casa")}}_{%endif%}{%if trigger.from_state.state not in ('not_home','home_arriving','home_arriving2') and trigger.to_state.state not in ('not_home','home_arriving','home_arriving2')%} e{%endif%}{%if trigger.to_state.state not in ('not_home','home_arriving','home_arriving2')%} chegou em _{{trigger.to_state.state|replace("home","casa")}}_{%endif%}.
- alias: Liga TV Flavia Chegou
  condition:
  - condition: time
    after: '18:00:00'
    before: '19:00:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  trigger:
  - platform: state
    entity_id: device_tracker.iphonedeflavialan
    from: not_home
    to: home
  action:
  - service: script.flavia_chegou_globo
  - service: script.flavia_chegou_sbt
  - service: script.flavia_chegou_record
- alias: Lista de Comandos Telegram
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /inicio
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /voltarhome
  action:
  - service: notify.telegram_bot
    data:
      message: 'Bem vindo automação residencial *FRIS Automação*. Selecione um dos
        menus abaixo:'
      data:
        inline_keyboard:
        - Térreo:/terreo, Controle Sala:/controlesala
        - Quarto:/quarto, Controle Quarto:/controlequarto
        - Portão:/portao
- alias: Lista de Comandos Telegram Terreo
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /terreo
  action:
  - service: notify.telegram_bot
    data:
      message: 'Comandos de automação do *Térreo*:'
      data:
        inline_keyboard:
        - Luz Esquerda:/luzesquerda, Luz Central:/luzcentral, Luz Direita:/luzdireita
        - Display:/display, Spot:/spot, Cervejeira:/cervejeira
        - Voltar:/voltarhome
- alias: Lista de Comandos Telegram Controle Sala
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /controlesala
  action:
  - service: notify.telegram_bot
    data:
      message: 'Controle remoto da *TV da Sala*:'
      data:
        inline_keyboard:
        - Liga TV Net:/tvnetsala
        - Src Net:/srcnetsala, Src Chromecast:/srcchromesala
        - Volume +:/volumemaissala, Volume -:/volumemenossala
        - Liga TV SBT:/ligasbtsala, Canal SBT:/canalsbtsala
        - Liga TV Record:/ligarecordsala, Canal Record:/canalrecordsala
        - Liga TV Globo:/ligaglobosala, Canal Globo:/canalglobosala
        - Liga TV Discovery:/ligadiscoverysala, Canal Discovery:/canaldiscoverysala
        - Voltar:/voltarhome
- alias: Lista de Comandos Telegram Controle Quarto
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /controlequarto
  action:
  - service: notify.telegram_bot
    data:
      message: 'Controle remoto da *TV do Quarto*:'
      data:
        inline_keyboard:
        - Liga TV Net:/tvnetquarto
        - Src Net:/srcnetquarto, Src Chromecast:/srcchromequarto
        - Volume +:/volumemaisquarto, Volume -:/volumemenosquarto
        - Liga TV SBT:/ligasbtquarto, Canal SBT:/canalsbtquarto
        - Liga TV Record:/ligarecordquarto, Canal Record:/canalrecordquarto
        - Liga TV Globo:/ligagloboquarto, Canal Globo:/canalgloboquarto
        - Liga TV Discovery:/ligadiscoveryquarto, Canal Discovery:/canaldiscoveryquarto
        - Voltar:/voltarhome
- alias: Lista de Comandos Telegram Quarto
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /quarto
  action:
  - service: notify.telegram_bot
    data:
      message: 'Comandos de automação dos *Quarto*:'
      data:
        inline_keyboard:
        - Luz Corredor:/luzcorredor
        - Luz Quarto:/luzquarto, Luz Painel:/luzpainel, Luz Sacada:/luzsacada
        - Voltar:/voltarhome
- alias: Comando Telegram Luz Esquerda
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /luzesquerda
  action:
  - service: light.toggle
    data:
      entity_id: light.luz_esquerda
- alias: Comando Telegram Luz Central
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /luzcentral
  action:
  - service: light.toggle
    data:
      entity_id: light.luz_central
- alias: Comando Telegram Luz Direita
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /luzdireita
  action:
  - service: light.toggle
    data:
      entity_id: light.luz_direita
- alias: Comando Telegram Display
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /display
  action:
  - service: switch.toggle
    data:
      entity_id: switch.display
- alias: Comando Telegram Spot
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /spot
  action:
  - service: switch.toggle
    data:
      entity_id: switch.garden_light
- alias: Comando Telegram Cervejeira
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /cervejeira
  action:
  - service: input_boolean.toggle
    data:
      entity_id: input_boolean.beer_fridge
- alias: Comando Telegram portão
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /portao
  action:
  - service: switch.toggle
    data:
      entity_id: switch.portao
- alias: Comando Telegram Arma Alarme
  condition:
    condition: state
    entity_id: binary_sensor.ativado
    state: 'off'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /arma_alarme
  action:
  - service: switch.toggle
    entity_id: switch.alarme
- alias: Comando Telegram desarma Alarme
  condition:
    condition: state
    entity_id: binary_sensor.ativado
    state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /desarma_alarme
  action:
  - service: switch.toggle
    entity_id: switch.alarme
- alias: Comando Telegram TV Sala
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /tvnetsala
  action:
  - service: script.toggle
    data:
      entity_id: script.liga_tv_net_sala
- alias: Comando Telegram Source Net Sala
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /srcnet
  action:
  - service: switch.toggle
    data:
      entity_id: switch.source_net_s
- alias: Comando Telegram Source Chromecast Sala
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /srcchrome
  action:
  - service: switch.toggle
    data:
      entity_id: switch.source_chromecast_s
- alias: Comando Telegram Desligar Tudo
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /desligar_tudo
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /desligar_tudo
  action:
  - service: script.desligar_tudo

- alias: Robson saindo de casa
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /sair_casa
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /sair_casa
  action:
  - service: script.sair_casa
- alias: Comando Waze BRF
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /wazebrf
  action:
  - service: notify.telegram_bot
    data:
      message: https://waze.com/ul?favorite=BRF&navigate=yes
- alias: Comando Waze Sogro
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /wazesogro
  action:
  - service: notify.telegram_bot
    data:
      message: https://waze.com/ul?favorite=Sogro&navigate=yes
- alias: Comando Waze Pai
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /wazepai
  action:
  - service: notify.telegram_bot
    data:
      message: https://waze.com/ul?favorite=CostaGaragem&navigate=yes
- alias: Comando Waze Escola Isabelle
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /wazeescola
  action:
  - service: notify.telegram_bot
    data:
      message: https://waze.com/ul?favorite=EscolaIsabelle&navigate=yes
- alias: Comando Waze Próximo Compromisso
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: /wazecompromisso
  action:
  - service: notify.telegram_bot
    data_template:
      message: https://waze.com/ul?q={{ states.sensor.para_compromisso.attributes["destination_addresses"]|replace("
        ", "+") }}
- alias: Start
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: /start
  action:
  - service: notify.telegram_bot
    data:
      message: Atualizando comandos para *FRIS Automação*
      data:
        keyboard:
        - /inicio
        - /boletim
        - /sair_casa
- alias: Flashbriefing
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /boletim
  - platform: template
    value_template: '{{ states.sensor.time.state == (states.input_datetime.boletim_1.attributes.timestamp
      | int | timestamp_custom(''%H:%M'', false)) }}'
  - platform: template
    value_template: '{{ states.sensor.time.state == (states.input_datetime.boletim_2.attributes.timestamp
      | int | timestamp_custom(''%H:%M'', false)) }}'
  - platform: template
    value_template: '{{ states.sensor.time.state == (states.input_datetime.boletim_3.attributes.timestamp
      | int | timestamp_custom(''%H:%M'', false)) }}'
  action:
  - service: shell_command.excluir_ultimo_flashbriefing
  - service: tts.clear_cache
  - service: script.atualiza_texto_voz
  - delay: 00:00:03
  - service: tts.google_say
    entity_id: media_player.quarto_fake
    data_template:
      language: pt
      message: '{% if is_state("input_boolean.enviar_saudacao", "on") %} {{ states.input_text.saudacao_voz.state
        }} {% endif %} {% if is_state("input_boolean.enviar_clima", "on") %} {{ states.input_text.clima_voz.state
        }} {% endif %} {% if is_state("input_boolean.enviar_mercado_financeiro", "on")
        %} {{ states.input_text.mercado_financeiro_voz.state }} {% endif %} {% if
        is_state("input_boolean.enviar_proximo_compromisso", "on") %} {{ states.input_text.proximo_compromisso_voz.state
        }} {% endif %}

        '
  - delay: 00:00:30
  - service: shell_command.renomear_flashbriefing
  - delay: 00:00:03
  - service: script.envia_texto
  - service: script.envia_voz
- alias: Guardar Valor do Bitcoin
  trigger:
  - platform: time
    at: 00:00:00
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.valor_bitcoin_meianoite_ontem
      value: >
       {{ states.input_number.valor_bitcoin_meianoite.state }}
  - service: input_number.set_value
    data_template:
      entity_id: input_number.valor_bitcoin_meianoite
      value: >
       {{ 1 / (states.sensor.exchange_rate_sensor.attributes.BTC | float)}}
- alias: Envio invalid configuration
  trigger:
  - platform: state
    entity_id: persistent_notification.invalid_config
    to: notifying
  action:
  - service: notify.telegram_admin
    data_template:
      title: >
       *{{ states.persistent_notification.invalid_config.attributes.title }}*
      message: >
       {{ states.persistent_notification.invalid_config.attributes.message }}
- alias: Ativa Timer TV
  trigger:
  - entity_id: input_boolean.ativa_timer_tv_dormir
    platform: state
    to: 'on'
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Timer* iniciado para *TV {{ states.input_select.media_player.state }}*, fim em {{ states('input_number.tempo_timer')|int }} minutos.
  - delay: "00:{{ states('input_number.tempo_timer')|int }}:00"
  - service: script.mensagem_tv
  - delay: 00:00:10
  - wait_template: '{{ is_state(''sensor.state_media_player'', ''idle'') }}'
    timeout: '00:01:00'
  - service: notify.telegram_bot
    data_template:
      message: '*Timer* da *TV {{ states.input_select.media_player.state }}* foi *finalizado.*'
  - service: script.video_ninar
  - service: input_boolean.turn_off
    entity_id: input_boolean.ativa_timer_tv_dormir
- alias: Sem energia
  trigger:
  - entity_id: switch.onoff_desumidificador_robson
    platform: state
    to: unavailable
  action:
  - service: notify.telegram_bot
    data:
      message: >
       *Controle de Energia*
       Sem energia em casa.
- alias: Voltou energia
  trigger:
  - entity_id: switch.onoff_desumidificador_robson
    platform: state
    from: unavailable
    to: 'on'
  - entity_id: switch.onoff_desumidificador_robson
    platform: state
    from: unavailable
    to: 'off'
  action:
  - service: notify.telegram_bot
    data:
      message: >
       *Controle de Energia*
       Sem energia em casa.
- alias: Esqueceu algo ligado em casa
  condition:
  - condition: state
    entity_id: binary_sensor.alguem_em_casa
    state: 'off'
  - condition: state
    entity_id: binary_sensor.algo_ligado
    state: 'on'
  trigger:
  - entity_id: binary_sensor.alguem_em_casa
    platform: state
    to: 'off'
  - entity_id: binary_sensor.algo_ligado
    platform: state
    to: 'on'
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Controle de Energia*{{- '\n' -}}
       Você saiu de casa e deixou algo ligado.
      inline_keyboard:
      - Desliga tudo:/desligar_tudo

- alias: Liga Desumidificador Horario
  condition:
    condition: state
    entity_id: input_boolean.ligar_desumidificador
    state: 'on'
  trigger:
  - platform: template
    value_template: >
     {{ states.sensor.time.state == (states.input_datetime.ligar_desumidificador_inicio.attributes.timestamp|int|timestamp_custom('%H:%M', false)) }}
  action:
  - service: switch.turn_on
    entity_id: switch.onoff_desumidificador_robson
  - service: switch.turn_on
    entity_id: switch.onoff_desumidificador_flavia
- alias: Liga Desumidificador Humidade Robson
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.ligar_desumidificador
      state: 'on'
    - condition: template
      value_template: >
       {{ states.sensor.time.state >= (states.input_datetime.horario_desumidificador_inicio.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
    - condition: template
      value_template: >
       {{ states.sensor.time.state <= (states.input_datetime.horario_desumidificador_fim.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
  trigger:
  - platform: template
    value_template: >
      {{ states.sensor.mold_indicator_2.state > states.input_number.ind_mofo_max.state}}
  action:
  - service: switch.turn_on
    entity_id: switch.onoff_desumidificador_robson
- alias: Liga Desumidificador Humidade Flavia
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.ligar_desumidificador
      state: 'on'
    - condition: template
      value_template: >
       {{ states.sensor.time.state >= (states.input_datetime.horario_desumidificador_inicio.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
    - condition: template
      value_template: >
       {{ states.sensor.time.state <= (states.input_datetime.horario_desumidificador_fim.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
  trigger:
  - platform: template
    value_template: >
     {{ states.sensor.mold_indicator.state > states.input_number.ind_mofo_max.state}}
  action:
  - service: switch.turn_on
    entity_id: switch.onoff_desumidificador_flavia
- alias: Desliga Desumidificador Horario
  condition:
    condition: state
    entity_id: input_boolean.ligar_desumidificador
    state: 'on'
  trigger:
  - platform: template
    value_template: >
     {{ states.sensor.time.state == (states.input_datetime.ligar_desumidificador_fim.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
  - platform: template
    value_template: >
     {{ states.sensor.time.state == (states.input_datetime.horario_desumidificador_fim.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
  action:
  - service: switch.turn_off
    entity_id: switch.onoff_desumidificador_robson
  - service: switch.turn_off
    entity_id: switch.onoff_desumidificador_flavia
- alias: Desliga Desumidificador Humidade Robson
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.ligar_desumidificador
      state: 'on'
    - condition: template
      value_template: >
       {{ states.sensor.time.state >= (states.input_datetime.horario_desumidificador_inicio.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
    - condition: template
      value_template: >
       {{ states.sensor.time.state <= (states.input_datetime.horario_desumidificador_fim.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
  trigger:
  - platform: template
    value_template: >
     {{ states.sensor.mold_indicator_2.state < states.input_number.ind_mofo_min.state}}
  action:
  - service: switch.turn_off
    entity_id: switch.onoff_desumidificador_robson
- alias: Desliga Desumidificador Humidade Flavia
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.ligar_desumidificador
      state: 'on'
    - condition: template
      value_template: >
       {{ states.sensor.time.state >= (states.input_datetime.horario_desumidificador_inicio.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
    - condition: template
      value_template: >
       {{ states.sensor.time.state <= (states.input_datetime.horario_desumidificador_fim.attributes.timestamp| int | timestamp_custom('%H:%M', false)) }}
  trigger:
  - platform: template
    value_template: >
     {{ states.sensor.mold_indicator.state < states.input_number.ind_mofo_min.state}}
  action:
  - service: switch.turn_off
    entity_id: switch.onoff_desumidificador_flavia
- alias: Esqueceu de ligar alarme
  condition:
    condition: state
    entity_id: binary_sensor.ativado
    state: 'off'
  trigger:
  - platform: state
    entity_id: binary_sensor.alguem_em_casa
    to: 'off'
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Segurança Residencial*{{- '\n' -}}
       _Atenção!_ Não encontrei _ninguém_ em casa e o _alarme_ está desligado.
- alias: Alarme acionado
  trigger:
  - platform: state
    entity_id: binary_sensor.acionado
    to: 'on'
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Segurança Residencial*{{- '\n' -}}
       {{- '\U0001F6A8' -}} {{- '\U0001F6A8' -}} {{- '\U0001F6A8' -}} _Atenção! Atenção! Alarme tocando._
  - service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.ha_alarm
- alias: Alarme ligado
  trigger:
  - platform: state
    entity_id: binary_sensor.ativado
    to: 'on'
  action:
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.ha_alarm
  - service: switch.turn_on
    entity_id: switch.fundos_state
  - service: switch.turn_on
    entity_id: switch.frente_state
  - service: switch.turn_on
    entity_id: switch.interna_state
  - service: notify.telegram_bot
    data_template:
      message: >
       *Segurança Residencial*{{- '\n' -}}
       _Alarme_ ativado.
- alias: Alarme ligado - Robson saindo de casa
  condition:
  - condition: state
    entity_id: sensor.robson_tracker
    state: 'home'
  trigger:
  - platform: state
    entity_id: binary_sensor.ativado
    to: 'on'
  action:
  - service: script.sair_casa
- alias: Alarme desligado
  trigger:
  - platform: state
    entity_id: binary_sensor.ativado
    to: 'off'
  action:
  - service: alarm_control_panel.alarm_disarm
    entity_id: alarm_control_panel.ha_alarm
  - service: switch.turn_off
    entity_id: switch.fundos_state
  - service: switch.turn_off
    entity_id: switch.frente_state
  - service: switch.turn_off
    entity_id: switch.interna_state
  - service: notify.telegram_bot
    data_template:
      message: >
       *Segurança Residencial*{{- '\n' -}}
       _Alarme_ desativado.
- alias: Arma alarme
  condition:
    condition: state
    entity_id: binary_sensor.ativado
    state: 'off'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    to: armed_away
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    to: armed_home
  action:
  - service: switch.toggle
    entity_id: switch.alarme
- alias: Desarma alarme
  condition:
    condition: state
    entity_id: binary_sensor.ativado
    state: 'on'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    to: disarmed
  action:
  - service: switch.toggle
    entity_id: switch.alarme
- alias: Detectado movimento
  condition:
    condition: state
    entity_id: binary_sensor.ativado
    state: 'on'
  trigger:
  - platform: state
    entity_id: sensor.frente_events
  - platform: state
    entity_id: sensor.fundos_events
  - platform: state
    entity_id: sensor.interna_events
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Segurança Residencial*{{- '\n' -}}Detectado movimento em casa no {{ trigger.to_state.attributes.friendly_name }}.
- alias: Volume Sala Baixo
  trigger:
  - platform: state
    entity_id: switch.vol_baixo_tv_s
  action:
  - service: input_number.decrement
    entity_id: input_number.vol_tv_sala
- alias: Volume Sala Cima
  trigger:
  - platform: state
    entity_id: switch.vol_cima_tv_s
  action:
  - service: input_number.increment
    entity_id: input_number.vol_tv_sala
- alias: Volume Quarto Baixo
  trigger:
  - platform: state
    entity_id: switch.vol_baixo_tv_q
  action:
  - service: input_number.decrement
    entity_id: input_number.vol_tv_quarto
- alias: Volume Quarto Cima
  trigger:
  - platform: state
    entity_id: switch.vol_cima_tv_q
  action:
  - service: input_number.increment
    entity_id: input_number.vol_tv_quarto
- alias: Frontend
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: frontend.set_theme
    data:
      name: green
- alias: Maquina Lavar Roupa
  trigger:
  - platform: state
    entity_id: binary_sensor.maquina_de_lavar_roupa
  action:
  - service: notify.telegram_bot
    data_template:
      message: >
       *Maquina de Lavar Roupa*{{- '\n' -}}Lavagem {{ {"on": "iniciada","off": "finalizada"}[trigger.to_state.state] }}.