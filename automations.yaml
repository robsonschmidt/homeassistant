- alias: Luz Corredor On
  action:
  - data:
      event: hall_light_on
      value1: 'on'
    service: ifttt.trigger
  condition: []
  id: '1513562930930'
  trigger:
  - entity_id: input_boolean.hall_light
    from: 'off'
    platform: state
    to: 'on'
- action:
  - data:
      event: hall_light_off
      value1: 'off'
    service: ifttt.trigger
  alias: Luz Corredor Off
  condition: []
  id: '1513562995349'
  trigger:
  - entity_id: input_boolean.hall_light
    from: 'on'
    platform: state
    to: 'off'
- action:
  - data:
      event: beer_fridge_on
      value1: 'on'
    service: ifttt.trigger
  alias: Cervejeira On
  condition: []
  id: '1513563051024'
  trigger:
  - entity_id: input_boolean.beer_fridge
    from: 'off'
    platform: state
    to: 'on'
- action:
  - data:
      event: beer_fridge_off
      value1: 'off'
    service: ifttt.trigger
  alias: Cervejeira Off
  condition: []
  id: '1513563084506'
  trigger:
  - entity_id: input_boolean.beer_fridge
    from: 'on'
    platform: state
    to: 'off'
- action:
  - data:
      message: 'Temp. CPU Alta - {{ states(''sensor.cpu_temperature'') }} ºC

        '
    service: notify.telegram_group
  alias: CPU Alta
  condition: []
  id: '1517266230635'
  trigger:
  - above: '60'
    below: '70'
    entity_id: sensor.cpu_temperature
    platform: numeric_state
- action:
  - data:
      message: 'Temp. CPU Multo Alta - {{ states(''sensor.cpu_temperature'') }} ºC

        '
    service: notify.telegram_group
  alias: CPU Muito Alta
  condition: []
  trigger:
  - above: '70'
    entity_id: sensor.cpu_temperature
    platform: numeric_state
- action:
  - alias: Broadlink Always OFF
    data_template:
      entity: '{{ trigger.entity_id }}

        '
    service: python_script.set_state
  alias: Broadlink Always OFF
  condition: []
  id: '1517777081947'
  trigger:
  - entity_id: switch.0_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.0_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.1_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.1_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.2_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.2_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.3_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.3_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.4_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.4_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.5_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.5_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.6_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.6_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.7_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.7_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.8_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.8_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.9_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.9_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.baixo_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.baixo_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.canal_baixo_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.canal_baixo_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.canal_cima_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.canal_cima_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.cima_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.cima_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.direita_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.direita_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.esquerda_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.esquerda_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.mute_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.mute_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.ok_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.ok_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.portao
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_net_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_baixo_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_baixo_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_cima_tv_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.vol_cima_tv_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_chromecast_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_net_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.source_dvd_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: switch.power_dvd_sala
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: script.source_chromecast_quarto
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: script.source_net_quarto
    from: 'off'
    platform: state
    to: 'on'
- action:
  - data:
      message: Placa encontrada.
    service: notify.telegram_bot
  alias: Placa carro
  condition: []
  id: '1518651715891'
  trigger:
  - event_data:
      entity_id: image_processing.openalpr_frente
      plate: ASC8060
    event_type: image_processing.found_plate
    platform: event
  - event_data:
      entity_id: image_processing.openalpr_frente
      plate: OXI5924
    event_type: image_processing.found_plate
    platform: event
  - event_data: {}
    event_type: image_processing.found_plate
    platform: event

# Telegram Portão
- alias: 'Portão ON/OFF'
  action:
  - data:
      message: '*Portão* acionado.'
    service: notify.telegram_group
  trigger:
  - entity_id: switch.portao
    from: 'off'
    platform: state
    to: 'on'

# Inicio e Parada do FRIS
- alias: 'FRIS Start'
  action:
  - data_template:
      message: '*FRIS Automação* iniciado.'
    service: notify.telegram_group
  trigger:
  - event: start
    platform: homeassistant
- alias: 'FRIS Stop'
  action:
  - service: notify.telegram_group
    data_template:
      message: '*FRIS Automação* desligado.'
  trigger:
  - event: shutdown
    platform: homeassistant

# Previsão de tempo 7 dias
- alias: 'Atualiza Nomes Previsão'
  id: update_friendly_names
  initial_state: 'on'
  trigger:
  - at: 0:05:00
    platform: time
  - entity_id: sensor.forecast_1
    platform: state
  - entity_id: sensor.forecast_2
    platform: state
  - entity_id: sensor.forecast_3
    platform: state
  - entity_id: sensor.forecast_4
    platform: state
  - entity_id: sensor.forecast_5
    platform: state
  - entity_id: sensor.forecast_6
    platform: state
  - entity_id: sensor.forecast_7
    platform: state
  action:
  - data_template:
      entityid: '{{trigger.entity_id}}'
    service: python_script.dark_sky_friendly_names

# Backup
- alias: 'Backup diário as 3:00'
  trigger:
    platform: time
    at: '3:00:00'
  action:
  - service: hassio.snapshot_full
    data_template:
      name: FRIS {{ now().strftime('%Y-%m-%d') }}
  - service: notify.telegram_group
    data_template:
      message: Criando Snapshot "FRIS {{ now().strftime('%Y-%m-%d') }}"
  - delay: 03:00:00
  - data:
      entity_id: switch.del_snap_files
    service: switch.toggle
  - delay: 00:10:00
  - data:
      addon: 7be23ff5_dropbox_sync
    service: hassio.addon_restart
- alias: 'Novo arquivo backup'
  trigger:
    platform: state
    entity_id: sensor.count_snap_files
  action:
  - service: notify.telegram_group
    data_template:
      message: Número de arquivos de backups {{ states.sensor.count_snap_files.state
        }}

# Velocidade Internet
- alias: 'Velocidade Internet Baixa'
  trigger:
  - below: '30'
    entity_id: sensor.speedtest_download
    platform: numeric_state
  action:
  - service: notify.telegram_group
    data_template:
      message: 'Velocidade Internet Baixa - Download {{ states(''sensor.speedtest_download'') }} Mbit/s

        '

# Device Tracker
- alias: 'Flavia chegou em casa'
  trigger:
  - platform: state
    entity_id: device_tracker.iphonedeflavialan
    from: 'not_home'
    to: 'home'
  action:
  - service: notify.telegram_group
    data:
      message: 'Flavia chegou em casa'
- alias: 'Flavia saiu de casa'
  trigger:
  - platform: state
    entity_id: device_tracker.iphonedeflavialan
    from: 'home'
    to: 'not_home'
  action:
  - service: notify.telegram_group
    data:
      message: 'Flavia saiu de casa'
- alias: 'Robson chegou em casa'
  trigger:
  - platform: state
    entity_id: device_tracker.52008849ec808451
    from: 'not_home'
    to: 'home'
  action:
    - service: notify.telegram_bot
      data:
        message: 'Olá *Robson*, bem vindo a sua casa. Deseja executar uma das ações favoritas:'
        data:
          inline_keyboard:
            - 'Portão:/portao'
            - 'Liga TV SBT:/ligasbtsala, Canal SBT:/canalsbtsala'
            - 'Liga TV Record:/ligarecordsala, Canal Record:/canalrecordsala'
            - 'Liga TV Globo:/ligaglobosala, Canal Globo:/canalglobosala'
            - 'Liga TV Discovery:/ligadiscoverysala, Canal Discovery:/canaldiscoverysala'
- alias: 'Liga Globo Flavia Chegou'
  trigger:
  - platform: state
    entity_id: device_tracker.iphonedeflavialan
    from: 'not_home'
    to: 'home'
  condition:
  - condition: time
    # At least one of the following is required.
    after: '18:00:00'
    before: '19:00:00'
    weekday:
      - mon 
      - tue
      - wed
      - thu
      - fri
  action:
  - service: script.liga_tv_sala_globo
- alias: 'Robson Fora de Casa'
  condition:
    condition: state
    entity_id: input_boolean.robson
    state: 'on'
  trigger:
    - platform: state
      entity_id: device_tracker.iphonederobsonlan
      to: 'not_home' 
      for:
        minutes: 10
    - platform: state
      entity_id: device_tracker.52008849ec808451
      to: 'not_home' 
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.robson
- alias: 'Robson Casa'
  condition:
    condition: state
    entity_id: input_boolean.robson
    state: 'off'
  trigger:
    - platform: state
      entity_id: device_tracker.iphonederobsonlan
      to: 'home' 
    - platform: state
      entity_id: device_tracker.52008849ec808451
      to: 'home' 
  action:
     service: input_boolean.turn_
     entity_id: input_boolean.robson

# Comandos Telegram
- alias: 'Lista de Comandos Telegram'
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/inicio'
  - platform: event
    event_type: telegram_callback
    event_data:
      data: '/voltarhome'
  action:
    - service: notify.telegram_bot
      data:
        message: 'Bem vindo automação residencial *FRIS Automação*. Selecione um dos menus abaixo:'
        data:
          inline_keyboard:
            - 'Térreo:/terreo, Controle Sala:/controlesala'
            - 'Quarto:/quarto, Controle Quarto:/controlequarto'
            - 'Portão:/portao'
- alias: 'Lista de Comandos Telegram Terreo'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/terreo'
  action:
    - service: notify.telegram_bot
      data:
        message: 'Comandos de automação do *Térreo*:'
        data:
          inline_keyboard:
            - 'Luz Esquerda:/luzesquerda, Luz Central:/luzcentral, Luz Direita:/luzdireita'
            - 'Display:/display, Spot:/spot, Cervejeira:/cervejeira'
            - 'Voltar:/voltarhome'
- alias: 'Lista de Comandos Telegram Controle Sala'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/controlesala'    
  action:
    - service: notify.telegram_bot
      data:
        message: 'Controle remoto da *TV da Sala*:'
        data:
          inline_keyboard:
            - 'Liga TV Net:/tvnetsala'
            - 'Src Net:/srcnetsala, Src Chromecast:/srcchromesala'
            - 'Volume +:/volumemaissala, Volume -:/volumemenossala'
            - 'Liga TV SBT:/ligasbtsala, Canal SBT:/canalsbtsala'
            - 'Liga TV Record:/ligarecordsala, Canal Record:/canalrecordsala'
            - 'Liga TV Globo:/ligaglobosala, Canal Globo:/canalglobosala'
            - 'Liga TV Discovery:/ligadiscoverysala, Canal Discovery:/canaldiscoverysala'
            - 'Voltar:/voltarhome'
- alias: 'Lista de Comandos Telegram Controle Quarto'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/controlequarto'    
  action:
    - service: notify.telegram_bot
      data:
        message: 'Controle remoto da *TV do Quarto*:'
        data:
          inline_keyboard:
            - 'Liga TV Net:/tvnetquarto'
            - 'Src Net:/srcnetquarto, Src Chromecast:/srcchromequarto'
            - 'Volume +:/volumemaisquarto, Volume -:/volumemenosquarto'
            - 'Liga TV SBT:/ligasbtquarto, Canal SBT:/canalsbtquarto'
            - 'Liga TV Record:/ligarecordquarto, Canal Record:/canalrecordquarto'
            - 'Liga TV Globo:/ligagloboquarto, Canal Globo:/canalgloboquarto'
            - 'Liga TV Discovery:/ligadiscoveryquarto, Canal Discovery:/canaldiscoveryquarto'
            - 'Voltar:/voltarhome'
- alias: 'Lista de Comandos Telegram Quarto'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/quarto'    
  action:
    - service: notify.telegram_bot
      data:
        message: 'Comandos de automação dos *Quarto*:'
        data:
          inline_keyboard:
            - 'Luz Corredor:/luzcorredor'
            - 'Luz Quarto:/luzquarto, Luz Painel:/luzpainel, Luz Sacada:/luzsacada'
            - 'Voltar:/voltarhome'

# Comandos da Lista de Comandos do Térreo
- alias: 'Comando Telegram Luz Esquerda'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/luzesquerda'
  action:
    - service: light.toggle
      data:
        entity_id: light.luz_esquerda
- alias: 'Comando Telegram Luz Central'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/luzcentral'
  action:
    - service: light.toggle
      data:
        entity_id: light.luz_central
- alias: 'Comando Telegram Luz Direita'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/luzdireita'
  action:
    - service: light.toggle
      data:
        entity_id: light.luz_direita      
- alias: 'Comando Telegram Display'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/display'
  action:
    - service: switch.toggle
      data:
        entity_id: switch.display      
- alias: 'Comando Telegram Spot'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/spot'
  action:
    - service: switch.toggle
      data:
        entity_id: switch.garden_light
- alias: 'Comando Telegram Cervejeira'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/cervejeira'
  action:
    - service: input_boolean.toggle
      data:
        entity_id: input_boolean.beer_fridge
        
# Comando Portão
- alias: 'Comando Telegram portão'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/portao'
  action:
    - service: switch.toggle
      data:
        entity_id: switch.portao

# Comandos da Lista de Comandos da Sala
- alias: 'Comando Telegram TV Sala'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/tvnetsala'
  action:
    - service: script.toggle
      data:
        entity_id: script.liga_tv_net_sala
- alias: 'Comando Telegram Source Net Sala'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/srcnet'
  action:
    - service: switch.toggle
      data:
        entity_id: switch.source_net_sala
- alias: 'Comando Telegram Source Chromecast Sala'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/srcchrome'
  action:
    - service: switch.toggle
      data:
        entity_id: switch.source_chromecast_sala
        
# Lista de Comandos Saindo de Casa
- alias: 'Robson saindo de casa'
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/sair_casa'
  - platform: event
    event_type: telegram_callback
    event_data:
      data: '/sair_casa'
  action:
    - service: notify.telegram_bot
      data_template:
        message: 'Olá *Robson*, você está saindo de casa, seguem seus atalhos :'
        data:
          inline_keyboard:
            - 'Portão:/portao'
            - 'Waze BRF ({{ states.sensor.para_brf.attributes.duration }}):/wazebrf, Waze Sogro ({{ states.sensor.para_sogro.attributes.duration }}):/wazesogro'
            - 'Waze Pai ({{ states.sensor.para_pai.attributes.duration }}):/wazepai, Waze Escola ({{ states.sensor.para_escola_isabelle.attributes.duration }}):/wazeescola'
            - 'Waze Comprimisso ({{ states.sensor.para_compromisso.attributes.duration }}):/wazecompromisso'
            - 'Musica Rock:/musicarock, Musica Familia:/musicafamilia'

# Comando Waze
- alias: 'Comando Waze BRF'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/wazebrf'
  action:
    - service: notify.telegram_bot
      data:
        message: 'waze://?favorite=BRF&navigate=yes'
- alias: 'Comando Waze Sogro'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/wazesogro'
  action:
    - service: notify.telegram_bot
      data:
        message: 'waze://?favorite=Sogro&navigate=yes'
- alias: 'Comando Waze Pai'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/wazepai'
  action:
    - service: notify.telegram_bot
      data:
        message: 'waze://?favorite=CostaGaragem&navigate=yes'
- alias: 'Comando Waze Escola Isabelle'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/wazeescola'
  action:
    - service: notify.telegram_bot
      data:
        message: 'waze://?favorite=EscolaIsabelle&navigate=yes'
- alias: 'Comando Waze Próximo Compromisso'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/wazecompromisso'
  action:
    - service: notify.telegram_bot
      data_template:
        message: 'waze://?q={{ states.calendar.robson.attributes["location"]|replace(" ", "+") }}&navigate=yes'

# Camando Start
- alias: 'Start'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/start'
  action:
    - service: notify.telegram_bot
      data:
        message: 'Atualizando comandos para *FRIS Automação*'
        data:
          keyboard:
            - '/inicio'
            - '/sair_casa'
            
# Flash Briefing
- alias: 'Flashbriefing'
  trigger:
  - platform: time
    at: '6:30:00'
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/boletim'
  action:
    - service: shell_command.excluir_ultimo_flashbriefing
    - service: notify.telegram_bot
      data_template:
        message: >
          *Temperatura Atual:* {{- '\n' -}}
          *- *{{ states.sensor.dark_sky_temperature.state|replace('.', ',') }} {{ states.sensor.dark_sky_temperature.attributes.unit_of_measurement }}  {{ states.sensor.dark_sky_summary.state }} {{- '\n' -}}
          *Previsão de tempo de hoje:* {{- '\n' -}}
          *- *{{ states.sensor.forecast_0.state }}
    - service: notify.telegram_bot
      data_template:
        message: >
          *Variação do Bitcoin:* {{- '\n' -}}
          *- Valor Compra:* USD 11.500,00 | BRL {{ ((states.sensor.exchange_rate_sensor.state|float) * 11500)|replace('.', ',') }} {{- '\n' -}}
          ( {{ (((((states.sensor.exchange_rate_1_btc.state | float) / 11500.00) -1) * 100) | round(2))|replace('.', ',') }} %) 
          {{- '\n' -}}
          *- Valor Carteira: * USD {{ (((states.sensor.exchange_rate_1_btc.state | float) * 0.028924) | round(2))|replace('.', ',') }} | BRL {{ (((states.sensor.exchange_rate_1_btc.state | float) * 0.028924 * (states.sensor.exchange_rate_sensor.state | float)) | round(2))|replace('.', ',') }}
          {{- '\n' -}}
          *- Ini:* {{ states.input_number.valor_bitcoin_meianoite.attributes.unit_of_measurement }} {{ ((states.input_number.valor_bitcoin_meianoite.state) | round(2))|replace('.', ',') }} 
          *| Atual:* {{states.sensor.exchange_rate_1_btc.attributes.unit_of_measurement }} {{((states.sensor.exchange_rate_1_btc.state | float) | round(2))|replace('.', ',') }} 
          ( {{ (((((states.sensor.exchange_rate_1_btc.state | float) / (states.input_number.valor_bitcoin_meianoite.state | float)) -1) * 100) | round(2))|replace('.', ',') }} %)
    - service: notify.telegram_bot
      data_template:
        message: >
           *Próximo compromisso:*  {{- '\n' -}}
           *- Título:* {{ states.calendar.robson.attributes.message }} {{- '\n' -}}
           *- Horário:* {{ as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d-%m-%Y %H:%M') }}
           até{% if as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d') == as_timestamp(states.calendar.robson.attributes.end_time) | timestamp_custom('%d') %}
           {{ as_timestamp(states.calendar.robson.attributes.end_time) | timestamp_custom('%H:%M') }}
           {% else %}
           {{ as_timestamp(states.calendar.robson.attributes.end_time) | timestamp_custom('%d-%m-%Y %H:%M') }}
           {% endif %}
           {{- '\n' -}}
           *- Local:* 
           {% if states.calendar.robson.attributes.location %}
           {{ states.calendar.robson.attributes.location }} 
           {% else %}
           Sem Endereço
           {% endif %}
           {{- '\n' -}}
           *- Tempo até destino:* {{ states.sensor.para_compromisso.attributes.duration }}
    - delay: 00:00:03
    - service: tts.google_say
      entity_id: media_player.quarto_isa
      data_template:
        language: 'pt'
        message: >
         {% if now().hour > 18 %}
         Boa noite Robson,
         {% elif now().hour > 12 %}
         Boa tarde Robson,
         {% else %}
         Bom dia Robson,
         {% endif %}
         {{ {"Sunday": "domingo","Monday": "segunda-feira", "Thusday": "terça-feira", "Wednesday": "quarta-feira", "Thursday": "quinta-feira", "Friday": "sexta-feira", "Saturday": "sábado"}[now().strftime('%A')] | default(now().strftime('%A')) }}
         , {{ now().strftime('%d/%m/%Y') }},
         as {{ (now().strftime('%H')) | int }} horas
         {% if (now().strftime('%M')) | int != 0 %}
         e {{ (now().strftime('%M')) | int }} minutos
         {% endif %}
         A temperatura atual é de {{ (states.sensor.dark_sky_temperature.state|round(0))}}°
         , {{ {"Partly Cloudy": "parcialmente nublado", "Mostly Cloudy": "totalmente nublado"}[states.sensor.dark_sky_summary.state] | default(states.sensor.dark_sky_summary.state) }}
         , com máxima de {{ (states.sensor.dark_sky_daily_high_temperature.state|round(0))}}°
         , mínima de {{ (states.sensor.dark_sky_daily_low_temperature.state|round(0))}}°
         , humidade de {{ (states.sensor.dark_sky_humidity.state|round(0)) }}{{ states.sensor.dark_sky_humidity.attributes.unit_of_measurement }}
         , e probabilidade de chuva de {{ (states.sensor.dark_sky_precip_probability.state|round(0)) }}{{ states.sensor.dark_sky_precip_probability.attributes.unit_of_measurement }}.
         A cotação do dolar está em {{ (states.sensor.exchange_rate_sensor.state|round(2))|replace('.', ' e ') }}
         , e o bitcoin em {{ (states.sensor.exchange_rate_1_btc.state|round(0)) }}
         , com uma variação de {{ (((((states.sensor.exchange_rate_1_btc.state | float) / (states.input_number.valor_bitcoin_meianoite.state | float)) -1) * 100) | round(2))|replace('.', ' virgula ') }} %.
         Seu próximo compromisso é {{ states.calendar.robson.attributes.message }}
         {% if ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d')) | int == now().day) and
         ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%m')) | int == now().month) %}
         Hoje
         {% elif ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d')) | int == (now().day + 1)) and
         ((as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%m')) | int == (now().month)) %}
         Amanhã
         {% else %}
         {{ as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%d-%m-%Y') }}
         {% endif %}
         as {{ (as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%H')) | int }} horas
         {% if (as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%M')) | int != 0 %}
         e {{ (as_timestamp(states.calendar.robson.attributes.start_time) | timestamp_custom('%M')) | int }} minutos
         {% endif %}
         {% if states.calendar.robson.attributes.location %}
         no {{ states.calendar.robson.attributes.location.split(',')[0] }} 
         {% endif %} 
         com tempo previsto de chegada de {{ states.sensor.para_compromisso.attributes.duration |replace('mins', 'minutos') }}.
    - delay: 00:00:45
    - service: shell_command.renomear_flashbriefing
    - delay: 00:00:03
    - service: telegram_bot.send_video
      data:
        file: /config/tts/FlashBriefing.mp3

# Flash Briefing Noite
- alias: 'FlashbriefingNoite'
  trigger:
  - platform: time
    at: '19:00:00'
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/boletim_noite'  
  action:
    - service: notify.telegram_bot
      data_template:
        message: >
          *Temperatura Atual:* {{- '\n' -}}
          {{ states.sensor.dark_sky_temperature.state }} {{ states.sensor.dark_sky_summary.state }} {{- '\n' -}}
          *Previsão de tempo de amanhã:* {{- '\n' -}}
          {{ states.sensor.forecast_1.state }}
    - service: notify.telegram_bot
      data_template:
        message: >
          *Variação do Bitcoin:* {{- '\n' -}}
          *- Valor Compra:* USD 11.500,00 | BRL {{ (states.sensor.exchange_rate_sensor.state | float) * 11500 }} {{- '\n' -}}
          ( {{ ((((states.sensor.exchange_rate_1_btc.state | float) / 11500.00) -1) * 100) | round(2) }} %) 
          {{- '\n' -}}
          *- Valor Carteira: * USD {{ ((states.sensor.exchange_rate_1_btc.state | float) * 0.028924) | round(2) }} | BRL {{ ((states.sensor.exchange_rate_1_btc.state | float) * 0.028924 * (states.sensor.exchange_rate_sensor.state | float)) | round(2) }}
          {{- '\n' -}}
          *- Ini:* {{ states.input_number.valor_bitcoin_meianoite.attributes.unit_of_measurement }} {{ (states.input_number.valor_bitcoin_meianoite.state) | round(2) }} 
          *| Atual:* {{states.sensor.exchange_rate_1_btc.attributes.unit_of_measurement }} {{(states.sensor.exchange_rate_1_btc.state | float) | round(2) }} 
          ( {{ ((((states.sensor.exchange_rate_1_btc.state | float) / (states.input_number.valor_bitcoin_meianoite.state | float)) -1) * 100) | round(2) }} %)

# Guardar valor do bitcoin
- alias: 'Guardar Valor do Bitcoin'
  trigger:
  - platform: time
    at: '00:00:00'
  - event: start
    platform: homeassistant
  action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.valor_bitcoin_meianoite
        value: '{{ states.sensor.exchange_rate_1_btc.state | float}}'
        
# Envia invalid configuration
- alias: 'Envio invalid configuration'
  trigger:
  - platform: state
    entity_id: persistent_notification.invalid_config
    to: 'notifying' 
  action:
    - service: notify.telegram_group
      data_template:
        title: >
          {{ states.persistent_notification.invalid_config.attributes.title }}
        message: >
          {{ states.persistent_notification.invalid_config.attributes.message }}